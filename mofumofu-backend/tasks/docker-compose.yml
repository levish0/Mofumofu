name: mofumofu-tasks

services:
  # Redis (Celery 브로커) - 포트 6380으로 변경
  redis-celery:
    image: redis:8.0.2
    ports:
      - "6380:6379"  # 외부 포트 6380, 내부 포트 6379
    volumes:
      - redis-celery-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI 태스크 서버
  tasks-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7000:7000"
    env_file:
      - ../docker.env
    environment:
      # Celery Redis (내부 네트워크에서는 redis-celery:6379)
      - CELERY_BROKER_URL=redis://redis-celery:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-celery:6379/0
    depends_on:
      redis-celery:
        condition: service_healthy
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - ../docker.env
    environment:
      # Celery Redis (내부 네트워크에서는 redis-celery:6379)
      - CELERY_BROKER_URL=redis://redis-celery:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-celery:6379/0
    depends_on:
      redis-celery:
        condition: service_healthy
      tasks-api:
        condition: service_started
    restart: unless-stopped
    deploy:
      replicas: 2  # 2개의 워커 실행

  # Celery Beat (스케줄러) - 주기적 작업용
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uv", "run", "celery", "-A", "app.core.celery_app", "beat", "--loglevel=info"]
    env_file:
      - ../docker.env
    environment:
      # Celery Redis (내부 네트워크에서는 redis-celery:6379)
      - CELERY_BROKER_URL=redis://redis-celery:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-celery:6379/0
    depends_on:
      redis-celery:
        condition: service_healthy
      tasks-api:
        condition: service_started
    restart: unless-stopped

  # Celery Flower (모니터링 - 선택사항)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uv", "run", "celery", "-A", "app.core.celery_app", "--broker=redis://redis-celery:6379/0", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    env_file:
      - ../docker.env
    environment:
      - CELERY_BROKER_URL=redis://redis-celery:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-celery:6379/0
    depends_on:
      redis-celery:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis-celery-data:

networks:
  default:
    name: mofumofu-tasks