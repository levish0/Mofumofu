{
	"openapi": "3.1.0",
	"info": {
		"title": "mofumofu-backend",
		"description": "",
		"contact": { "name": "Levi Lim", "email": "shiueo.csh@gmail.com" },
		"license": { "name": "" },
		"version": "0.2.0"
	},
	"paths": {
		"/v0/auth/github": {
			"post": {
				"tags": ["Auth"],
				"operationId": "github_sign_in",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GithubLoginRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "GitHub OAuth login successful",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthJWTResponse" } } }
					},
					"400": { "description": "Invalid authorization code" },
					"401": { "description": "OAuth authentication failed" },
					"500": { "description": "Internal server error" }
				}
			}
		},
		"/v0/auth/google": {
			"post": {
				"tags": ["Auth"],
				"operationId": "google_sign_in",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GoogleLoginRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Google OAuth login successful",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthJWTResponse" } } }
					},
					"400": { "description": "Invalid authorization code" },
					"401": { "description": "OAuth authentication failed" },
					"500": { "description": "Internal server error" }
				}
			}
		},
		"/v0/auth/refresh": {
			"post": {
				"tags": ["Auth"],
				"operationId": "refresh",
				"responses": {
					"200": {
						"description": "Token refresh successful",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthJWTResponse" } } }
					},
					"400": { "description": "No refresh token cookie found" },
					"401": { "description": "Refresh token cookie exists but is invalid or malformed" },
					"404": { "description": "User not found" },
					"500": { "description": "Internal server error" }
				},
				"security": [{ "refresh_token_cookie": [] }]
			}
		},
		"/v0/auth/sign_in": {
			"post": {
				"tags": ["Auth"],
				"operationId": "sign_in",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthLoginRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Login successful",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthJWTResponse" } } }
					},
					"400": { "description": "Invalid request" },
					"401": { "description": "Invalid credentials" },
					"404": { "description": "User not found" },
					"500": { "description": "Internal server error" }
				}
			}
		},
		"/v0/auth/sign_out": {
			"post": {
				"tags": ["Auth"],
				"operationId": "sign_out",
				"responses": {
					"204": { "description": "Sign out Successful" },
					"400": { "description": "No refresh token cookie found" },
					"401": { "description": "Refresh token cookie exists but is invalid or malformed" },
					"404": { "description": "User not found" },
					"500": { "description": "Internal server error" }
				},
				"security": [{ "refresh_token_cookie": [] }]
			}
		},
		"/v0/follow": {
			"post": {
				"tags": ["Follow"],
				"operationId": "api_create_follow",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateFollowRequest" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Successfully followed user" },
					"400": { "description": "Bad request" },
					"404": { "description": "User not found" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/followers/{handle}": {
			"get": {
				"tags": ["Follow"],
				"operationId": "get_followers",
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"description": "User handle",
						"required": true,
						"schema": { "type": "string" }
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number (default: 1)",
						"required": false,
						"schema": { "type": "integer", "format": "int64", "minimum": 0 }
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Items per page (default: 20)",
						"required": false,
						"schema": { "type": "integer", "format": "int64", "minimum": 0 }
					}
				],
				"responses": {
					"200": {
						"description": "Followers list",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/FollowListResponse" } } }
					},
					"404": { "description": "User not found" }
				}
			}
		},
		"/v0/following/{handle}": {
			"get": {
				"tags": ["Follow"],
				"operationId": "get_following",
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"description": "User handle",
						"required": true,
						"schema": { "type": "string" }
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number (default: 1)",
						"required": false,
						"schema": { "type": "integer", "format": "int64", "minimum": 0 }
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Items per page (default: 20)",
						"required": false,
						"schema": { "type": "integer", "format": "int64", "minimum": 0 }
					}
				],
				"responses": {
					"200": {
						"description": "Following list",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/FollowListResponse" } } }
					},
					"404": { "description": "User not found" }
				}
			}
		},
		"/v0/hashtag/trending": {
			"post": {
				"tags": ["Hashtag"],
				"operationId": "trending_hashtags",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/TrendingHashtagsRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Trending hashtags retrieved successfully",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/TrendingHashtagsResponse" } } }
					},
					"400": { "description": "Invalid input" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/post": {
			"post": {
				"tags": ["Post"],
				"operationId": "create_post",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreatePostRequest" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Post created successfully" },
					"400": { "description": "Invalid input" },
					"500": { "description": "Internal Server Error" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/post/get": {
			"post": {
				"tags": ["Post"],
				"operationId": "get_post_by_handle_and_slug",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/GetPostByHandleAndSlugRequest" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Post retrieved successfully",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/PostInfoResponse" } } }
					},
					"400": { "description": "Invalid input" },
					"404": { "description": "Post not found" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/post/thumbnail": {
			"post": {
				"tags": ["Post"],
				"operationId": "upload_thumbnail",
				"requestBody": {
					"content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/PostThumbnailForm" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Thumbnail image upload queued successfully" },
					"400": { "description": "Invalid file or parameters" },
					"401": { "description": "Unauthorized" },
					"404": { "description": "Post not found" },
					"500": { "description": "Internal server error" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/posts": {
			"post": {
				"tags": ["Post"],
				"operationId": "get_posts",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetPostsRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Posts retrieved successfully",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetPostsResponse" } } }
					},
					"400": { "description": "Invalid input" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/posts/search": {
			"post": {
				"tags": ["Post"],
				"operationId": "search_posts",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchPostsRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Posts search completed successfully",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetPostsResponse" } } }
					},
					"400": { "description": "Invalid search parameters" },
					"500": { "description": "Search service error" }
				}
			}
		},
		"/v0/unfollow": {
			"post": {
				"tags": ["Follow"],
				"operationId": "api_delete_follow",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteFollowRequest" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Successfully unfollowed user" },
					"400": { "description": "Bad request" },
					"404": { "description": "User not found" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/user": {
			"post": {
				"tags": ["User"],
				"operationId": "create_user",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateUserRequest" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "User created successfully" },
					"400": { "description": "Invalid input" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/user/check-handle": {
			"post": {
				"tags": ["User"],
				"operationId": "check_handle_availability",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetUserProfileRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Handle availability check result",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/HandleCheckResponse" } } }
					},
					"400": { "description": "Invalid input" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/user/my_profile": {
			"get": {
				"tags": ["User"],
				"operationId": "get_my_profile",
				"responses": {
					"200": {
						"description": "Successfully retrieved user profile",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserInfoResponse" } } }
					},
					"401": { "description": "Unauthorized" },
					"404": { "description": "User not found" },
					"500": { "description": "Internal Server Error" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/user/profile": {
			"put": {
				"tags": ["User"],
				"operationId": "update_profile",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProfileRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Profile updated successfully",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserInfoResponse" } } }
					},
					"400": { "description": "Invalid input" },
					"401": { "description": "Unauthorized" },
					"404": { "description": "User not found" },
					"500": { "description": "Internal Server Error" }
				},
				"security": [{ "bearer_auth": [] }]
			},
			"post": {
				"tags": ["User"],
				"operationId": "get_profile",
				"requestBody": {
					"content": { "application/json": { "schema": { "$ref": "#/components/schemas/GetUserProfileRequest" } } },
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successfully retrieved user information",
						"content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserInfoResponse" } } }
					},
					"404": { "description": "User not found" },
					"500": { "description": "Internal Server Error" }
				}
			}
		},
		"/v0/user/profile/avatar": {
			"post": {
				"tags": ["User"],
				"operationId": "upload_avatar",
				"requestBody": {
					"content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/ProfileAvatarForm" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Profile image upload queued successfully" },
					"400": { "description": "Invalid file or parameters" },
					"401": { "description": "Unauthorized" },
					"500": { "description": "Internal server error" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		},
		"/v0/user/profile/banner": {
			"post": {
				"tags": ["User"],
				"operationId": "upload_banner",
				"requestBody": {
					"content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/ProfileBannerForm" } } },
					"required": true
				},
				"responses": {
					"204": { "description": "Banner image upload queued successfully" },
					"400": { "description": "Invalid file or parameters" },
					"401": { "description": "Unauthorized" },
					"500": { "description": "Internal server error" }
				},
				"security": [{ "bearer_auth": [] }]
			}
		}
	},
	"components": {
		"schemas": {
			"AuthJWTResponse": {
				"type": "object",
				"required": ["access_token"],
				"properties": { "access_token": { "type": "string" } }
			},
			"AuthLoginRequest": {
				"type": "object",
				"required": ["handle", "password"],
				"properties": { "handle": { "type": "string" }, "password": { "type": "string" } }
			},
			"CreateFollowRequest": {
				"type": "object",
				"required": ["followee_handle"],
				"properties": { "followee_handle": { "type": "string" } }
			},
			"CreatePostRequest": {
				"type": "object",
				"required": ["title", "content", "slug"],
				"properties": {
					"content": { "type": "string" },
					"hashtags": { "type": ["array", "null"], "items": { "type": "string" } },
					"slug": { "type": "string" },
					"summary": { "type": ["string", "null"] },
					"title": { "type": "string" }
				}
			},
			"CreateUserRequest": {
				"type": "object",
				"required": ["name", "handle", "password", "email"],
				"properties": {
					"email": { "type": "string" },
					"handle": { "type": "string" },
					"name": { "type": "string" },
					"password": { "type": "string" }
				}
			},
			"DeleteFollowRequest": {
				"type": "object",
				"required": ["followee_handle"],
				"properties": { "followee_handle": { "type": "string" } }
			},
			"ErrorResponse": {
				"type": "object",
				"required": ["status", "code"],
				"properties": {
					"code": { "type": "string" },
					"details": { "type": ["string", "null"] },
					"status": { "type": "integer", "format": "int32", "minimum": 0 }
				}
			},
			"FollowListResponse": {
				"type": "object",
				"required": ["users", "total_count", "page", "per_page", "has_more"],
				"properties": {
					"has_more": { "type": "boolean" },
					"page": { "type": "integer", "format": "int64", "minimum": 0 },
					"per_page": { "type": "integer", "format": "int64", "minimum": 0 },
					"total_count": { "type": "integer", "format": "int64", "minimum": 0 },
					"users": { "type": "array", "items": { "$ref": "#/components/schemas/UserInfoResponse" } }
				}
			},
			"GetPostByHandleAndSlugRequest": {
				"type": "object",
				"required": ["handle", "slug"],
				"properties": { "handle": { "type": "string" }, "slug": { "type": "string" } }
			},
			"GetPostsRequest": {
				"type": "object",
				"properties": {
					"page": { "type": ["integer", "null"], "format": "int32", "minimum": 0 },
					"page_size": { "type": ["integer", "null"], "format": "int32", "minimum": 0 },
					"sort": { "oneOf": [{ "type": "null" }, { "$ref": "#/components/schemas/PostSortOrder" }] }
				}
			},
			"GetPostsResponse": {
				"type": "object",
				"required": ["posts", "current_page", "page_size", "has_more"],
				"properties": {
					"current_page": { "type": "integer", "format": "int32", "minimum": 0 },
					"has_more": { "type": "boolean" },
					"page_size": { "type": "integer", "format": "int32", "minimum": 0 },
					"posts": { "type": "array", "items": { "$ref": "#/components/schemas/PostListItem" } },
					"total_count": { "type": ["integer", "null"], "format": "int64", "minimum": 0 }
				}
			},
			"GetUserProfileRequest": {
				"type": "object",
				"required": ["handle"],
				"properties": { "handle": { "type": "string" } }
			},
			"GithubLoginRequest": {
				"type": "object",
				"required": ["code"],
				"properties": { "code": { "type": "string" }, "handle": { "type": ["string", "null"] } }
			},
			"GoogleLoginRequest": {
				"type": "object",
				"required": ["code"],
				"properties": { "code": { "type": "string" }, "handle": { "type": ["string", "null"] } }
			},
			"HandleCheckResponse": {
				"type": "object",
				"required": ["is_available"],
				"properties": { "is_available": { "type": "boolean" } }
			},
			"PostAuthor": {
				"type": "object",
				"required": ["handle", "name"],
				"properties": {
					"handle": { "type": "string" },
					"name": { "type": "string" },
					"profile_image": { "type": ["string", "null"] }
				}
			},
			"PostInfoResponse": {
				"type": "object",
				"required": [
					"title",
					"content",
					"author",
					"created_at",
					"like_count",
					"comment_count",
					"view_count",
					"slug",
					"tags"
				],
				"properties": {
					"author": { "$ref": "#/components/schemas/PostAuthor" },
					"comment_count": { "type": "integer", "format": "int32" },
					"content": { "type": "string" },
					"created_at": { "type": "string", "format": "date-time" },
					"like_count": { "type": "integer", "format": "int32" },
					"published_at": { "type": ["string", "null"], "format": "date-time" },
					"slug": { "type": "string" },
					"summary": { "type": ["string", "null"] },
					"tags": { "type": "array", "items": { "type": "string" } },
					"title": { "type": "string" },
					"updated_at": { "type": ["string", "null"], "format": "date-time" },
					"view_count": { "type": "integer", "format": "int32" }
				}
			},
			"PostListItem": {
				"type": "object",
				"required": [
					"id",
					"title",
					"user_handle",
					"user_name",
					"created_at",
					"like_count",
					"comment_count",
					"view_count",
					"slug",
					"hashtags"
				],
				"properties": {
					"comment_count": { "type": "integer", "format": "int32" },
					"created_at": { "type": "string", "format": "date-time" },
					"hashtags": { "type": "array", "items": { "type": "string" } },
					"id": { "type": "string", "format": "uuid" },
					"like_count": { "type": "integer", "format": "int32" },
					"slug": { "type": "string" },
					"summary": { "type": ["string", "null"] },
					"thumbnail_image": { "type": ["string", "null"] },
					"title": { "type": "string" },
					"user_avatar": { "type": ["string", "null"] },
					"user_handle": { "type": "string" },
					"user_name": { "type": "string" },
					"view_count": { "type": "integer", "format": "int32" }
				}
			},
			"PostSortOrder": { "type": "string", "enum": ["latest", "popular", "oldest"] },
			"PostThumbnailForm": {
				"type": "object",
				"required": ["slug", "file"],
				"properties": {
					"file": { "type": "string", "format": "binary", "contentMediaType": "image/*" },
					"slug": { "type": "string" }
				}
			},
			"ProfileAvatarForm": {
				"type": "object",
				"required": ["file"],
				"properties": { "file": { "type": "string", "format": "binary", "contentMediaType": "image/*" } }
			},
			"ProfileBannerForm": {
				"type": "object",
				"required": ["file"],
				"properties": { "file": { "type": "string", "format": "binary", "contentMediaType": "image/*" } }
			},
			"SearchPostsRequest": {
				"type": "object",
				"properties": {
					"date_from": {
						"type": ["string", "null"],
						"format": "date-time",
						"description": "날짜 범위 필터링 - 시작일"
					},
					"date_to": { "type": ["string", "null"], "format": "date-time", "description": "날짜 범위 필터링 - 종료일" },
					"hashtags": {
						"type": ["array", "null"],
						"items": { "type": "string" },
						"description": "특정 해시태그로 필터링"
					},
					"min_likes": { "type": ["integer", "null"], "format": "int32", "description": "최소 좋아요 수" },
					"page": { "type": ["integer", "null"], "format": "int32", "description": "페이지 번호", "minimum": 0 },
					"page_size": { "type": ["integer", "null"], "format": "int32", "description": "페이지 크기", "minimum": 0 },
					"query": { "type": ["string", "null"], "description": "검색 쿼리 (제목, 내용, 해시태그, 사용자명에서 검색)" },
					"sort": {
						"oneOf": [{ "type": "null" }, { "$ref": "#/components/schemas/PostSortOrder", "description": "정렬 방식" }]
					},
					"user_handle": { "type": ["string", "null"], "description": "특정 사용자로 필터링" }
				}
			},
			"TrendingHashtagsRequest": {
				"type": "object",
				"properties": {
					"days": { "type": ["integer", "null"], "format": "int64" },
					"limit": { "type": ["integer", "null"], "format": "int64", "minimum": 0 }
				}
			},
			"TrendingHashtagsResponse": {
				"type": "object",
				"required": ["hashtags"],
				"properties": { "hashtags": { "type": "array", "items": { "type": "string" } } }
			},
			"UpdateProfileRequest": {
				"type": "object",
				"properties": {
					"bio": { "type": ["string", "null"] },
					"handle": { "type": ["string", "null"] },
					"location": { "type": ["string", "null"] },
					"name": { "type": ["string", "null"] },
					"password": { "type": ["string", "null"] },
					"website": { "type": ["string", "null"] }
				}
			},
			"UserInfoResponse": {
				"type": "object",
				"required": ["name", "handle", "email"],
				"properties": {
					"banner_image": { "type": ["string", "null"] },
					"bio": { "type": ["string", "null"] },
					"email": { "type": "string" },
					"handle": { "type": "string" },
					"location": { "type": ["string", "null"] },
					"name": { "type": "string" },
					"profile_image": { "type": ["string", "null"] },
					"website": { "type": ["string", "null"] }
				}
			}
		},
		"securitySchemes": {
			"bearer_auth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" },
			"refresh_token_cookie": { "type": "apiKey", "in": "cookie", "name": "refresh_token" }
		}
	},
	"tags": [
		{ "name": "Auth", "description": "Authentication endpoints" },
		{ "name": "User", "description": "User endpoints" },
		{ "name": "Post", "description": "Post endpoints" },
		{ "name": "Follow", "description": "Follow endpoints" },
		{ "name": "Hashtag", "description": "Hashtag endpoints" }
	]
}
